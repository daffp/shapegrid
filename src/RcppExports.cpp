// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ellipse_gridcpp
NumericVector ellipse_gridcpp(int n, Rcpp::NumericVector R, Rcpp::NumericVector C);
RcppExport SEXP _shapegrid_ellipse_gridcpp(SEXP nSEXP, SEXP RSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type R(RSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(ellipse_gridcpp(n, R, C));
    return rcpp_result_gen;
END_RCPP
}
// triangle_gridcpp
NumericVector triangle_gridcpp(int n, Rcpp::NumericVector V);
RcppExport SEXP _shapegrid_triangle_gridcpp(SEXP nSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(triangle_gridcpp(n, V));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_shapegrid_ellipse_gridcpp", (DL_FUNC) &_shapegrid_ellipse_gridcpp, 3},
    {"_shapegrid_triangle_gridcpp", (DL_FUNC) &_shapegrid_triangle_gridcpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_shapegrid(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
